#pragma once

#define TOTAL 79

const uint8_t font [TOTAL] [8] = {
	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // 0x00
	{ 0x7E, 0x81, 0x95, 0xB1, 0xB1, 0x95, 0x81, 0x7E }, // 0x01
	{ 0x7E, 0xFF, 0xEB, 0xCF, 0xCF, 0xEB, 0xFF, 0x7E }, // 0x02
	{ 0x0E, 0x1F, 0x3F, 0x7E, 0x3F, 0x1F, 0x0E, 0x00 }, // 0x03
	{ 0x08, 0x1C, 0x3E, 0x7F, 0x3E, 0x1C, 0x08, 0x00 }, // 0x04
	{ 0x18, 0xBA, 0xFF, 0xFF, 0xFF, 0xBA, 0x18, 0x00 }, // 0x05
	{ 0x10, 0xB8, 0xFC, 0xFF, 0xFC, 0xB8, 0x10, 0x00 }, // 0x06
	{ 0x00, 0x00, 0x18, 0x3C, 0x3C, 0x18, 0x00, 0x00 }, // 0x07
	{ 0xFF, 0xFF, 0xE7, 0xC3, 0xC3, 0xE7, 0xFF, 0xFF }, // 0x08
	{ 0x00, 0x3C, 0x66, 0x42, 0x42, 0x66, 0x3C, 0x00 }, // 0x09
	{ 0xFF, 0xC3, 0x99, 0xBD, 0xBD, 0x99, 0xC3, 0xFF }, // 0x0A
	{ 0x70, 0xF8, 0x88, 0x88, 0xFD, 0x7F, 0x07, 0x0F }, // 0x0B
	{ 0x00, 0x4E, 0x5F, 0xF1, 0xF1, 0x5F, 0x4E, 0x00 }, // 0x0C
	{ 0xC0, 0xE0, 0xFF, 0x7F, 0x05, 0x05, 0x07, 0x07 }, // 0x0D
	{ 0xC0, 0xFF, 0x7F, 0x05, 0x05, 0x65, 0x7F, 0x3F }, // 0x0E
	{ 0x99, 0x5A, 0x3C, 0xE7, 0xE7, 0x3C, 0x5A, 0x99 }, // 0x0F
	{ 0x7F, 0x3E, 0x3E, 0x1C, 0x1C, 0x08, 0x08, 0x00 }, // 0x10
	{ 0x08, 0x08, 0x1C, 0x1C, 0x3E, 0x3E, 0x7F, 0x00 }, // 0x11
	{ 0x00, 0x24, 0x66, 0xFF, 0xFF, 0x66, 0x24, 0x00 }, // 0x12
	{ 0x00, 0x5F, 0x5F, 0x00, 0x00, 0x5F, 0x5F, 0x00 }, // 0x13
	{ 0x06, 0x0F, 0x09, 0x7F, 0x7F, 0x01, 0x7F, 0x7F }, // 0x14
	{ 0x40, 0xDA, 0xBF, 0xA5, 0xFD, 0x59, 0x03, 0x02 }, // 0x15
	{ 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00 }, // 0x16
	{ 0x80, 0x94, 0xB6, 0xFF, 0xFF, 0xB6, 0x94, 0x80 }, // 0x17
	{ 0x00, 0x04, 0x06, 0x7F, 0x7F, 0x06, 0x04, 0x00 }, // 0x18
	{ 0x00, 0x10, 0x30, 0x7F, 0x7F, 0x30, 0x10, 0x00 }, // 0x19
	{ 0x08, 0x08, 0x08, 0x2A, 0x3E, 0x1C, 0x08, 0x00 }, // 0x1A
	{ 0x08, 0x1C, 0x3E, 0x2A, 0x08, 0x08, 0x08, 0x00 }, // 0x1B
	{ 0x3C, 0x3C, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00 }, // 0x1C
	{ 0x08, 0x1C, 0x3E, 0x08, 0x08, 0x3E, 0x1C, 0x08 }, // 0x1D
	{ 0x30, 0x38, 0x3C, 0x3E, 0x3E, 0x3C, 0x38, 0x30 }, // 0x1E
	{ 0x06, 0x0E, 0x1E, 0x3E, 0x3E, 0x1E, 0x0E, 0x06 }, // 0x1F
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Space
	{0x00, 0x00, 0x00, 0xbf, 0x00, 0x00, 0x00, 0x00}, // !
	{0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x00, 0x00}, // "
	{0x00, 0x24, 0x7e, 0x24, 0x24, 0x7e, 0x24, 0x00}, // #
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // $
	{0x00, 0x46, 0x26, 0x10, 0x08, 0x64, 0x62, 0x00}, // %
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // &
	{0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00}, // '
	{0x00, 0x81, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00}, // )
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x81, 0x00}, // (
	{0x00, 0x00, 0x05, 0x02, 0x05, 0x00, 0x00, 0x00}, // *
	{0x00, 0x10, 0x10, 0x7c, 0x10, 0x10, 0x00, 0x00}, // +
	{0x00, 0x00, 0x80, 0x40, 0x00, 0x00, 0x00, 0x00}, // ,
	{0x00, 0x00, 0x10, 0x10, 0x10, 0x10, 0x00, 0x00}, // -
	{0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00}, // .
	{0x00, 0x00, 0xc0, 0x30, 0x0c, 0x03, 0x00, 0x00}, // /
	{0x00, 0x7e, 0x85, 0x89, 0x91, 0xa1, 0x7e, 0x00}, // 0
	{0x00, 0x00, 0x04, 0x02, 0xff, 0x00, 0x00, 0x00}, // 1
	
	{0x00, 0x82, 0xc1, 0xa1, 0x91, 0x89, 0x86, 0x00}, // 2

	{0x00, 0x42, 0x81, 0x89, 0x89, 0x89, 0x76, 0x00}, // 3
	{0x00, 0x0f, 0x10, 0x10, 0x10, 0x10, 0xff, 0x00}, // 4
	{0x00, 0x8f, 0x89, 0x89, 0x89, 0x89, 0x71, 0x00}, // 5
	{0x00, 0x7e, 0x89, 0x89, 0x89, 0x89, 0x72, 0x00}, // 6
	{0x00, 0xc1, 0x21, 0x11, 0x09, 0x05, 0x03, 0x00}, // 7
	{0x00, 0x76, 0x89, 0x89, 0x89, 0x89, 0x76, 0x00}, // 8
	{0x00, 0x06, 0x89, 0x89, 0x89, 0x49, 0x3e, 0x00}, // 9
	{0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00}, // :
	{0x00, 0x40, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00}, // ;
	{0x00, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00, 0x00}, // <
	{0x00, 0x28, 0x28, 0x28, 0x28, 0x28, 0x28, 0x00}, // =
	{0x00, 0x00, 0x00, 0x82, 0x44, 0x28, 0x10, 0x00}, // >
	{0x00, 0x02, 0x01, 0xb1, 0x11, 0x11, 0x0e, 0x00}, // ?
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // @
	{0x00, 0xfe, 0x11, 0x11, 0x11, 0x11, 0xfe, 0x00}, // A
	{0x00, 0xff, 0x89, 0x89, 0x89, 0x89, 0x76, 0x00}, // B
	{0x00, 0x7e, 0x81, 0x81, 0x81, 0x81, 0x42, 0x00}, // C
	{0x00, 0xff, 0x81, 0x81, 0x81, 0x42, 0x3c, 0x00}, // D
	{0x00, 0xff, 0x89, 0x89, 0x89, 0x81, 0x81, 0x00}, // E
	{0x00, 0xff, 0x09, 0x09, 0x09, 0x01, 0x01, 0x00}, // F
	{0x00, 0x7e, 0x81, 0x81, 0x91, 0x91, 0x70, 0x00}, // G
	{0x00, 0xff, 0x10, 0x10, 0x10, 0x10, 0xff, 0x00}, // H
	{0x00, 0x00, 0x00, 0x81, 0xff, 0x81, 0x00, 0x00}, // I
	{0x00, 0x40, 0x81, 0x81, 0x81, 0x41, 0x3f, 0x00}, // J
	{0x00, 0xfe, 0x10, 0x28, 0x44, 0x82, 0x00, 0x00}, // K
	{0x00, 0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00}, // L
	{0x00, 0xff, 0x02, 0x04, 0x04, 0x02, 0xff, 0x00}, // M
	{0x00, 0xff, 0x04, 0x08, 0x10, 0x20, 0xff, 0x00} // N
};

// Cada fila representa la configuración de cada sprite.
// Y cada columna representa un valor de la configuración.
// 1 = SpritesCount;
// 2 = fpms;
// 3 = El primer indice en el siguiente arreglo.
const uint16_t predefined_config[3][3] = {
	{2, 500, 0},
	{2, 500, 2},
	{5, 200, 4}
};

const uint8_t predefined_values[9] [8] = {
	{0x00, 0x20, 0x46, 0x40, 0x40, 0x46, 0x20, 0x00},
	{0x08, 0x10, 0x26, 0x20, 0xE0, 0xA6, 0xF0, 0x08},
	{0x3C, 0x42, 0x81, 0x81, 0x99, 0xA5, 0x42, 0x00},
	{0x3C, 0x42, 0x81, 0x81, 0x91, 0x91, 0x52, 0x3C},
	{0x18, 0x24, 0x44, 0x88, 0x44, 0x24, 0x18, 0x00},
	{0x18, 0x3C, 0x44, 0x88, 0x44, 0x24, 0x18, 0x00},
	{0x18, 0x3C, 0x7C, 0x88, 0x44, 0x24, 0x18, 0x00},
	{0x18, 0x3C, 0x7C, 0xF8, 0x7C, 0x24, 0x18, 0x00},
	{0x18, 0x3C, 0x7C, 0xF8, 0x7C, 0x3C, 0x18, 0x00}
};